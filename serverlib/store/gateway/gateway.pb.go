// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway.proto

package gateway

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	Status_OFF Status = 0
	Status_ON  Status = 1
)

var Status_name = map[int32]string{
	0: "OFF",
	1: "ON",
}

var Status_value = map[string]int32{
	"OFF": 0,
	"ON":  1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{0}
}

type ServerInfo_LoadType int32

const (
	ServerInfo_HTTP ServerInfo_LoadType = 0
	ServerInfo_TCP  ServerInfo_LoadType = 1
	ServerInfo_GRPC ServerInfo_LoadType = 2
)

var ServerInfo_LoadType_name = map[int32]string{
	0: "HTTP",
	1: "TCP",
	2: "GRPC",
}

var ServerInfo_LoadType_value = map[string]int32{
	"HTTP": 0,
	"TCP":  1,
	"GRPC": 2,
}

func (x ServerInfo_LoadType) String() string {
	return proto.EnumName(ServerInfo_LoadType_name, int32(x))
}

func (ServerInfo_LoadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{0, 0}
}

type ServerInfo struct {
	Id                   int32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LoadType             ServerInfo_LoadType `protobuf:"varint,2,opt,name=load_type,json=loadType,proto3,enum=gateway.ServerInfo_LoadType" json:"load_type,omitempty"`
	ServiceName          string              `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	ServiceDesc          string              `protobuf:"bytes,4,opt,name=service_desc,json=serviceDesc,proto3" json:"service_desc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ServerInfo) Reset()         { *m = ServerInfo{} }
func (m *ServerInfo) String() string { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()    {}
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{0}
}

func (m *ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfo.Unmarshal(m, b)
}
func (m *ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfo.Marshal(b, m, deterministic)
}
func (m *ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfo.Merge(m, src)
}
func (m *ServerInfo) XXX_Size() int {
	return xxx_messageInfo_ServerInfo.Size(m)
}
func (m *ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfo proto.InternalMessageInfo

func (m *ServerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ServerInfo) GetLoadType() ServerInfo_LoadType {
	if m != nil {
		return m.LoadType
	}
	return ServerInfo_HTTP
}

func (m *ServerInfo) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ServerInfo) GetServiceDesc() string {
	if m != nil {
		return m.ServiceDesc
	}
	return ""
}

type AccessControl struct {
	OpenAuth             Status   `protobuf:"varint,1,opt,name=open_auth,json=openAuth,proto3,enum=gateway.Status" json:"open_auth,omitempty"`
	WhiteList            string   `protobuf:"bytes,2,opt,name=white_list,json=whiteList,proto3" json:"white_list,omitempty"`
	BlackList            string   `protobuf:"bytes,3,opt,name=black_list,json=blackList,proto3" json:"black_list,omitempty"`
	WhiteHostName        string   `protobuf:"bytes,4,opt,name=white_host_name,json=whiteHostName,proto3" json:"white_host_name,omitempty"`
	ClientipFlowLimit    uint32   `protobuf:"varint,5,opt,name=clientip_flow_limit,json=clientipFlowLimit,proto3" json:"clientip_flow_limit,omitempty"`
	ServiceFlowLimit     uint32   `protobuf:"varint,6,opt,name=service_flow_limit,json=serviceFlowLimit,proto3" json:"service_flow_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccessControl) Reset()         { *m = AccessControl{} }
func (m *AccessControl) String() string { return proto.CompactTextString(m) }
func (*AccessControl) ProtoMessage()    {}
func (*AccessControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{1}
}

func (m *AccessControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccessControl.Unmarshal(m, b)
}
func (m *AccessControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccessControl.Marshal(b, m, deterministic)
}
func (m *AccessControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccessControl.Merge(m, src)
}
func (m *AccessControl) XXX_Size() int {
	return xxx_messageInfo_AccessControl.Size(m)
}
func (m *AccessControl) XXX_DiscardUnknown() {
	xxx_messageInfo_AccessControl.DiscardUnknown(m)
}

var xxx_messageInfo_AccessControl proto.InternalMessageInfo

func (m *AccessControl) GetOpenAuth() Status {
	if m != nil {
		return m.OpenAuth
	}
	return Status_OFF
}

func (m *AccessControl) GetWhiteList() string {
	if m != nil {
		return m.WhiteList
	}
	return ""
}

func (m *AccessControl) GetBlackList() string {
	if m != nil {
		return m.BlackList
	}
	return ""
}

func (m *AccessControl) GetWhiteHostName() string {
	if m != nil {
		return m.WhiteHostName
	}
	return ""
}

func (m *AccessControl) GetClientipFlowLimit() uint32 {
	if m != nil {
		return m.ClientipFlowLimit
	}
	return 0
}

func (m *AccessControl) GetServiceFlowLimit() uint32 {
	if m != nil {
		return m.ServiceFlowLimit
	}
	return 0
}

type LoadBalance struct {
	CheckMethod            uint32   `protobuf:"varint,1,opt,name=check_method,json=checkMethod,proto3" json:"check_method,omitempty"`
	CheckTimeout           uint32   `protobuf:"varint,2,opt,name=check_timeout,json=checkTimeout,proto3" json:"check_timeout,omitempty"`
	CheckInterval          uint32   `protobuf:"varint,3,opt,name=check_interval,json=checkInterval,proto3" json:"check_interval,omitempty"`
	RoundType              uint32   `protobuf:"varint,4,opt,name=round_type,json=roundType,proto3" json:"round_type,omitempty"`
	IpList                 string   `protobuf:"bytes,5,opt,name=ip_list,json=ipList,proto3" json:"ip_list,omitempty"`
	WeightList             string   `protobuf:"bytes,6,opt,name=weight_list,json=weightList,proto3" json:"weight_list,omitempty"`
	ForbidList             string   `protobuf:"bytes,7,opt,name=forbid_list,json=forbidList,proto3" json:"forbid_list,omitempty"`
	UpstreamConnectTimeout uint32   `protobuf:"varint,8,opt,name=upstream_connect_timeout,json=upstreamConnectTimeout,proto3" json:"upstream_connect_timeout,omitempty"`
	UpstreamHeaderTimeout  uint32   `protobuf:"varint,9,opt,name=upstream_header_timeout,json=upstreamHeaderTimeout,proto3" json:"upstream_header_timeout,omitempty"`
	UpstreamIdleTimeout    uint32   `protobuf:"varint,10,opt,name=upstream_idle_timeout,json=upstreamIdleTimeout,proto3" json:"upstream_idle_timeout,omitempty"`
	UpstreamMaxIdle        uint32   `protobuf:"varint,11,opt,name=upstream_max_idle,json=upstreamMaxIdle,proto3" json:"upstream_max_idle,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *LoadBalance) Reset()         { *m = LoadBalance{} }
func (m *LoadBalance) String() string { return proto.CompactTextString(m) }
func (*LoadBalance) ProtoMessage()    {}
func (*LoadBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{2}
}

func (m *LoadBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadBalance.Unmarshal(m, b)
}
func (m *LoadBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadBalance.Marshal(b, m, deterministic)
}
func (m *LoadBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadBalance.Merge(m, src)
}
func (m *LoadBalance) XXX_Size() int {
	return xxx_messageInfo_LoadBalance.Size(m)
}
func (m *LoadBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadBalance.DiscardUnknown(m)
}

var xxx_messageInfo_LoadBalance proto.InternalMessageInfo

func (m *LoadBalance) GetCheckMethod() uint32 {
	if m != nil {
		return m.CheckMethod
	}
	return 0
}

func (m *LoadBalance) GetCheckTimeout() uint32 {
	if m != nil {
		return m.CheckTimeout
	}
	return 0
}

func (m *LoadBalance) GetCheckInterval() uint32 {
	if m != nil {
		return m.CheckInterval
	}
	return 0
}

func (m *LoadBalance) GetRoundType() uint32 {
	if m != nil {
		return m.RoundType
	}
	return 0
}

func (m *LoadBalance) GetIpList() string {
	if m != nil {
		return m.IpList
	}
	return ""
}

func (m *LoadBalance) GetWeightList() string {
	if m != nil {
		return m.WeightList
	}
	return ""
}

func (m *LoadBalance) GetForbidList() string {
	if m != nil {
		return m.ForbidList
	}
	return ""
}

func (m *LoadBalance) GetUpstreamConnectTimeout() uint32 {
	if m != nil {
		return m.UpstreamConnectTimeout
	}
	return 0
}

func (m *LoadBalance) GetUpstreamHeaderTimeout() uint32 {
	if m != nil {
		return m.UpstreamHeaderTimeout
	}
	return 0
}

func (m *LoadBalance) GetUpstreamIdleTimeout() uint32 {
	if m != nil {
		return m.UpstreamIdleTimeout
	}
	return 0
}

func (m *LoadBalance) GetUpstreamMaxIdle() uint32 {
	if m != nil {
		return m.UpstreamMaxIdle
	}
	return 0
}

type HttpRule struct {
	RuleType             uint32   `protobuf:"varint,4,opt,name=rule_type,json=ruleType,proto3" json:"rule_type,omitempty"`
	Rule                 string   `protobuf:"bytes,5,opt,name=rule,proto3" json:"rule,omitempty"`
	NeedHttps            Status   `protobuf:"varint,6,opt,name=need_https,json=needHttps,proto3,enum=gateway.Status" json:"need_https,omitempty"`
	NeedStripUri         Status   `protobuf:"varint,7,opt,name=need_strip_uri,json=needStripUri,proto3,enum=gateway.Status" json:"need_strip_uri,omitempty"`
	NeedWebsocket        Status   `protobuf:"varint,8,opt,name=need_websocket,json=needWebsocket,proto3,enum=gateway.Status" json:"need_websocket,omitempty"`
	UrlRewrite           string   `protobuf:"bytes,9,opt,name=url_rewrite,json=urlRewrite,proto3" json:"url_rewrite,omitempty"`
	HeaderTransform      string   `protobuf:"bytes,10,opt,name=header_transform,json=headerTransform,proto3" json:"header_transform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HttpRule) Reset()         { *m = HttpRule{} }
func (m *HttpRule) String() string { return proto.CompactTextString(m) }
func (*HttpRule) ProtoMessage()    {}
func (*HttpRule) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{3}
}

func (m *HttpRule) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HttpRule.Unmarshal(m, b)
}
func (m *HttpRule) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HttpRule.Marshal(b, m, deterministic)
}
func (m *HttpRule) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HttpRule.Merge(m, src)
}
func (m *HttpRule) XXX_Size() int {
	return xxx_messageInfo_HttpRule.Size(m)
}
func (m *HttpRule) XXX_DiscardUnknown() {
	xxx_messageInfo_HttpRule.DiscardUnknown(m)
}

var xxx_messageInfo_HttpRule proto.InternalMessageInfo

func (m *HttpRule) GetRuleType() uint32 {
	if m != nil {
		return m.RuleType
	}
	return 0
}

func (m *HttpRule) GetRule() string {
	if m != nil {
		return m.Rule
	}
	return ""
}

func (m *HttpRule) GetNeedHttps() Status {
	if m != nil {
		return m.NeedHttps
	}
	return Status_OFF
}

func (m *HttpRule) GetNeedStripUri() Status {
	if m != nil {
		return m.NeedStripUri
	}
	return Status_OFF
}

func (m *HttpRule) GetNeedWebsocket() Status {
	if m != nil {
		return m.NeedWebsocket
	}
	return Status_OFF
}

func (m *HttpRule) GetUrlRewrite() string {
	if m != nil {
		return m.UrlRewrite
	}
	return ""
}

func (m *HttpRule) GetHeaderTransform() string {
	if m != nil {
		return m.HeaderTransform
	}
	return ""
}

type ServiceInfo struct {
	ServerInfo           *ServerInfo    `protobuf:"bytes,1,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	AccessControl        *AccessControl `protobuf:"bytes,2,opt,name=access_control,json=accessControl,proto3" json:"access_control,omitempty"`
	LoadBalance          *LoadBalance   `protobuf:"bytes,3,opt,name=loadBalance,proto3" json:"loadBalance,omitempty"`
	HttpRule             *HttpRule      `protobuf:"bytes,4,opt,name=httpRule,proto3" json:"httpRule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ServiceInfo) Reset()         { *m = ServiceInfo{} }
func (m *ServiceInfo) String() string { return proto.CompactTextString(m) }
func (*ServiceInfo) ProtoMessage()    {}
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{4}
}

func (m *ServiceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceInfo.Unmarshal(m, b)
}
func (m *ServiceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceInfo.Marshal(b, m, deterministic)
}
func (m *ServiceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceInfo.Merge(m, src)
}
func (m *ServiceInfo) XXX_Size() int {
	return xxx_messageInfo_ServiceInfo.Size(m)
}
func (m *ServiceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceInfo proto.InternalMessageInfo

func (m *ServiceInfo) GetServerInfo() *ServerInfo {
	if m != nil {
		return m.ServerInfo
	}
	return nil
}

func (m *ServiceInfo) GetAccessControl() *AccessControl {
	if m != nil {
		return m.AccessControl
	}
	return nil
}

func (m *ServiceInfo) GetLoadBalance() *LoadBalance {
	if m != nil {
		return m.LoadBalance
	}
	return nil
}

func (m *ServiceInfo) GetHttpRule() *HttpRule {
	if m != nil {
		return m.HttpRule
	}
	return nil
}

type Services struct {
	ServiceInfo          []*ServiceInfo `protobuf:"bytes,1,rep,name=service_info,json=serviceInfo,proto3" json:"service_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Services) Reset()         { *m = Services{} }
func (m *Services) String() string { return proto.CompactTextString(m) }
func (*Services) ProtoMessage()    {}
func (*Services) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{5}
}

func (m *Services) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Services.Unmarshal(m, b)
}
func (m *Services) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Services.Marshal(b, m, deterministic)
}
func (m *Services) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Services.Merge(m, src)
}
func (m *Services) XXX_Size() int {
	return xxx_messageInfo_Services.Size(m)
}
func (m *Services) XXX_DiscardUnknown() {
	xxx_messageInfo_Services.DiscardUnknown(m)
}

var xxx_messageInfo_Services proto.InternalMessageInfo

func (m *Services) GetServiceInfo() []*ServiceInfo {
	if m != nil {
		return m.ServiceInfo
	}
	return nil
}

func init() {
	proto.RegisterEnum("gateway.Status", Status_name, Status_value)
	proto.RegisterEnum("gateway.ServerInfo_LoadType", ServerInfo_LoadType_name, ServerInfo_LoadType_value)
	proto.RegisterType((*ServerInfo)(nil), "gateway.ServerInfo")
	proto.RegisterType((*AccessControl)(nil), "gateway.AccessControl")
	proto.RegisterType((*LoadBalance)(nil), "gateway.LoadBalance")
	proto.RegisterType((*HttpRule)(nil), "gateway.HttpRule")
	proto.RegisterType((*ServiceInfo)(nil), "gateway.ServiceInfo")
	proto.RegisterType((*Services)(nil), "gateway.Services")
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor_f1a937782ebbded5) }

var fileDescriptor_f1a937782ebbded5 = []byte{
	// 821 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x55, 0xdd, 0x6e, 0x23, 0x35,
	0x14, 0xde, 0x49, 0xdb, 0x74, 0xe6, 0x4c, 0x27, 0x4d, 0x5d, 0xd8, 0x0d, 0x02, 0x44, 0x09, 0x02,
	0xca, 0x6a, 0x09, 0x52, 0x80, 0x02, 0x17, 0x5c, 0xec, 0x06, 0x95, 0x56, 0xea, 0xee, 0x56, 0x6e,
	0x10, 0x12, 0x37, 0x23, 0x77, 0xc6, 0xd9, 0xb1, 0xea, 0x8c, 0x47, 0xb6, 0xa7, 0x69, 0x2f, 0x79,
	0x19, 0x1e, 0x05, 0xf1, 0x2a, 0xbc, 0xc5, 0xca, 0xc7, 0x33, 0x93, 0x46, 0xea, 0x9d, 0xf3, 0xfd,
	0xd8, 0x73, 0xbe, 0x63, 0x9f, 0x40, 0xf2, 0x8e, 0x59, 0xbe, 0x62, 0xf7, 0x93, 0x4a, 0x2b, 0xab,
	0xc8, 0x6e, 0xf3, 0x73, 0xfc, 0x6f, 0x00, 0x70, 0xc5, 0xf5, 0x2d, 0xd7, 0xe7, 0xe5, 0x42, 0x91,
	0x01, 0xf4, 0x44, 0x3e, 0x0a, 0x8e, 0x82, 0xe3, 0x1d, 0xda, 0x13, 0x39, 0xf9, 0x05, 0x22, 0xa9,
	0x58, 0x9e, 0xda, 0xfb, 0x8a, 0x8f, 0x7a, 0x47, 0xc1, 0xf1, 0x60, 0xfa, 0xc9, 0xa4, 0xdd, 0x6a,
	0xed, 0x9b, 0x5c, 0x28, 0x96, 0xcf, 0xef, 0x2b, 0x4e, 0x43, 0xd9, 0xac, 0xc8, 0xe7, 0xb0, 0x67,
	0xb8, 0xbe, 0x15, 0x19, 0x4f, 0x4b, 0xb6, 0xe4, 0xa3, 0xad, 0xa3, 0xe0, 0x38, 0xa2, 0x71, 0x83,
	0xbd, 0x61, 0xcb, 0x0d, 0x49, 0xce, 0x4d, 0x36, 0xda, 0xde, 0x90, 0xfc, 0xc6, 0x4d, 0x36, 0xfe,
	0x1a, 0xc2, 0x76, 0x6f, 0x12, 0xc2, 0xf6, 0xd9, 0x7c, 0x7e, 0x39, 0x7c, 0x42, 0x76, 0x61, 0x6b,
	0x3e, 0xbb, 0x1c, 0x06, 0x0e, 0xfa, 0x9d, 0x5e, 0xce, 0x86, 0xbd, 0xf1, 0xdf, 0x3d, 0x48, 0x5e,
	0x66, 0x19, 0x37, 0x66, 0xa6, 0x4a, 0xab, 0x95, 0x24, 0x2f, 0x20, 0x52, 0x15, 0x2f, 0x53, 0x56,
	0xdb, 0x02, 0x4b, 0x1a, 0x4c, 0xf7, 0xd7, 0xdf, 0x6e, 0x99, 0xad, 0x0d, 0x0d, 0x9d, 0xe2, 0x65,
	0x6d, 0x0b, 0xf2, 0x29, 0xc0, 0xaa, 0x10, 0x96, 0xa7, 0x52, 0x18, 0x8b, 0xa5, 0x46, 0x34, 0x42,
	0xe4, 0x42, 0x18, 0xeb, 0xe8, 0x6b, 0xc9, 0xb2, 0x1b, 0x4f, 0xfb, 0x5a, 0x22, 0x44, 0x90, 0xfe,
	0x0a, 0xf6, 0xbd, 0xbb, 0x50, 0xc6, 0xfa, 0x7a, 0x7d, 0x31, 0x09, 0xc2, 0x67, 0xca, 0x58, 0xac,
	0x78, 0x02, 0x87, 0x99, 0x14, 0xbc, 0xb4, 0xa2, 0x4a, 0x17, 0x52, 0xad, 0x52, 0x29, 0x96, 0xc2,
	0x8e, 0x76, 0x8e, 0x82, 0xe3, 0x84, 0x1e, 0xb4, 0xd4, 0xa9, 0x54, 0xab, 0x0b, 0x47, 0x90, 0x17,
	0x40, 0xda, 0x84, 0x1e, 0xc8, 0xfb, 0x28, 0x1f, 0x36, 0x4c, 0xa7, 0x1e, 0xff, 0xb7, 0x05, 0xb1,
	0x4b, 0xeb, 0x15, 0x93, 0xac, 0xcc, 0x30, 0xdf, 0xac, 0xe0, 0xd9, 0x4d, 0xba, 0xe4, 0xb6, 0x50,
	0xbe, 0xaf, 0x09, 0x8d, 0x11, 0x7b, 0x8d, 0x10, 0xf9, 0x02, 0x12, 0x2f, 0xb1, 0x62, 0xc9, 0x55,
	0xed, 0x2b, 0x4f, 0xa8, 0xf7, 0xcd, 0x3d, 0x46, 0xbe, 0x84, 0x81, 0x17, 0x89, 0xd2, 0x72, 0x7d,
	0xcb, 0x24, 0x06, 0x90, 0x50, 0x6f, 0x3d, 0x6f, 0x40, 0x97, 0x91, 0x56, 0x75, 0xd9, 0xdc, 0x96,
	0x6d, 0x94, 0x44, 0x88, 0x60, 0xfb, 0x9e, 0xc1, 0xae, 0xa8, 0x7c, 0x7e, 0x3b, 0x98, 0x4d, 0x5f,
	0x54, 0x18, 0xde, 0x67, 0x10, 0xaf, 0xb8, 0x78, 0x57, 0x58, 0x4f, 0xf6, 0x91, 0x04, 0x0f, 0xb5,
	0x82, 0x85, 0xd2, 0xd7, 0x22, 0xf7, 0x82, 0x5d, 0x2f, 0xf0, 0x10, 0x0a, 0x7e, 0x86, 0x51, 0x5d,
	0x19, 0xab, 0x39, 0x5b, 0xa6, 0x99, 0x2a, 0x4b, 0x9e, 0xd9, 0xae, 0xa0, 0x10, 0xbf, 0xe3, 0x69,
	0xcb, 0xcf, 0x3c, 0xdd, 0x96, 0x76, 0x02, 0xcf, 0x3a, 0x67, 0xc1, 0x59, 0xce, 0x75, 0x67, 0x8c,
	0xd0, 0xf8, 0x61, 0x4b, 0x9f, 0x21, 0xdb, 0xfa, 0xa6, 0xd0, 0x11, 0xa9, 0xc8, 0x25, 0xef, 0x5c,
	0x80, 0xae, 0xc3, 0x96, 0x3c, 0xcf, 0x25, 0x6f, 0x3d, 0xcf, 0xe1, 0xa0, 0xf3, 0x2c, 0xd9, 0x1d,
	0xfa, 0x46, 0x31, 0xea, 0xf7, 0x5b, 0xe2, 0x35, 0xbb, 0x73, 0x96, 0xf1, 0x3f, 0x3d, 0x08, 0xcf,
	0xac, 0xad, 0x68, 0x2d, 0x39, 0xf9, 0x18, 0x22, 0x5d, 0xbb, 0x33, 0xd6, 0xb9, 0x86, 0x0e, 0xc0,
	0x58, 0x09, 0x6c, 0xbb, 0x75, 0x93, 0x29, 0xae, 0xc9, 0x04, 0xa0, 0xe4, 0x3c, 0x4f, 0x0b, 0x6b,
	0x2b, 0x83, 0x81, 0x3e, 0x72, 0xf7, 0x23, 0x27, 0x71, 0x67, 0x18, 0xf2, 0x23, 0x0c, 0x50, 0x6f,
	0xac, 0x16, 0x55, 0x5a, 0x6b, 0x81, 0x19, 0x3f, 0xe2, 0xd9, 0x73, 0xb2, 0x2b, 0xa7, 0xfa, 0x43,
	0x0b, 0x72, 0xd2, 0xd8, 0x56, 0xfc, 0xda, 0xa8, 0xec, 0x86, 0xfb, 0xb0, 0x1f, 0xb1, 0x25, 0x4e,
	0xf6, 0x67, 0xab, 0x72, 0xfd, 0xac, 0xb5, 0x4c, 0x35, 0x5f, 0x69, 0x61, 0x39, 0x06, 0x1d, 0x51,
	0xa8, 0xb5, 0xa4, 0x1e, 0x21, 0xdf, 0xc0, 0xb0, 0x6d, 0x86, 0x66, 0xa5, 0x59, 0x28, 0xbd, 0xc4,
	0x60, 0x23, 0xba, 0xef, 0xf1, 0x79, 0x0b, 0x8f, 0xff, 0x0f, 0x20, 0xbe, 0xf2, 0x0f, 0x01, 0x27,
	0xd8, 0x0f, 0x80, 0xf3, 0x83, 0xeb, 0x54, 0x94, 0x0b, 0x85, 0x57, 0x3e, 0x9e, 0x1e, 0x3e, 0x32,
	0xb3, 0x28, 0x98, 0xf5, 0xdc, 0xfb, 0x15, 0x06, 0x0c, 0x87, 0x87, 0xbb, 0x3e, 0x6e, 0x7a, 0xe0,
	0x3b, 0x88, 0xa7, 0x4f, 0x3b, 0xe3, 0xc6, 0x6c, 0xa1, 0x09, 0xdb, 0x18, 0x35, 0x27, 0x10, 0xcb,
	0xf5, 0xbb, 0xc3, 0xd7, 0x11, 0x4f, 0x3f, 0xe8, 0xbc, 0x0f, 0xde, 0x24, 0x7d, 0x28, 0x24, 0xdf,
	0x42, 0x58, 0x34, 0x4d, 0xc6, 0xbe, 0xc6, 0xd3, 0x83, 0xce, 0xd4, 0x76, 0x9f, 0x76, 0x92, 0xf1,
	0x0c, 0xc2, 0xa6, 0x54, 0x43, 0x7e, 0x5a, 0xcf, 0xce, 0xa6, 0xd0, 0xad, 0x8d, 0x33, 0x1f, 0x64,
	0xd2, 0x4d, 0x54, 0xf7, 0xe3, 0xf9, 0x47, 0xd0, 0xf7, 0x5d, 0x71, 0x53, 0xf4, 0xed, 0xe9, 0xe9,
	0xf0, 0x09, 0xe9, 0x43, 0xef, 0xed, 0x9b, 0x61, 0xf0, 0x6a, 0xef, 0x2f, 0x98, 0x4c, 0xbe, 0x6b,
	0x76, 0xb8, 0xee, 0xe3, 0x5f, 0xc5, 0xf7, 0xef, 0x03, 0x00, 0x00, 0xff, 0xff, 0x80, 0xcc, 0x0e,
	0x40, 0x3b, 0x06, 0x00, 0x00,
}
